// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: gotf.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Builtin go types to provide terraform provider and block's attribute type.
type Builtin int32

const (
	Builtin_string         Builtin = 0
	Builtin_bool           Builtin = 1
	Builtin_byte           Builtin = 2
	Builtin_complex128     Builtin = 3
	Builtin_complex64      Builtin = 4
	Builtin_float32        Builtin = 5
	Builtin_float64        Builtin = 6
	Builtin_int            Builtin = 7
	Builtin_int16          Builtin = 8
	Builtin_int32          Builtin = 9
	Builtin_int64          Builtin = 10
	Builtin_int8           Builtin = 11
	Builtin_rune           Builtin = 12
	Builtin_uint           Builtin = 13
	Builtin_uint16         Builtin = 14
	Builtin_uint32         Builtin = 15
	Builtin_uint64         Builtin = 16
	Builtin_uint8          Builtin = 17
	Builtin_uintptr        Builtin = 18
	Builtin_any            Builtin = 19
	Builtin_string_ptr     Builtin = 20
	Builtin_bool_ptr       Builtin = 21
	Builtin_byte_ptr       Builtin = 22
	Builtin_complex128_ptr Builtin = 23
	Builtin_complex64_ptr  Builtin = 24
	Builtin_float32_ptr    Builtin = 25
	Builtin_float64_ptr    Builtin = 26
	Builtin_int_ptr        Builtin = 27
	Builtin_int16_ptr      Builtin = 28
	Builtin_int32_ptr      Builtin = 29
	Builtin_int64_ptr      Builtin = 30
	Builtin_int8_ptr       Builtin = 31
	Builtin_rune_ptr       Builtin = 32
	Builtin_uint_ptr       Builtin = 33
	Builtin_uint16_ptr     Builtin = 34
	Builtin_uint32_ptr     Builtin = 35
	Builtin_uint64_ptr     Builtin = 36
	Builtin_uint8_ptr      Builtin = 37
	Builtin_any_ptr        Builtin = 38
)

// Enum value maps for Builtin.
var (
	Builtin_name = map[int32]string{
		0:  "string",
		1:  "bool",
		2:  "byte",
		3:  "complex128",
		4:  "complex64",
		5:  "float32",
		6:  "float64",
		7:  "int",
		8:  "int16",
		9:  "int32",
		10: "int64",
		11: "int8",
		12: "rune",
		13: "uint",
		14: "uint16",
		15: "uint32",
		16: "uint64",
		17: "uint8",
		18: "uintptr",
		19: "any",
		20: "string_ptr",
		21: "bool_ptr",
		22: "byte_ptr",
		23: "complex128_ptr",
		24: "complex64_ptr",
		25: "float32_ptr",
		26: "float64_ptr",
		27: "int_ptr",
		28: "int16_ptr",
		29: "int32_ptr",
		30: "int64_ptr",
		31: "int8_ptr",
		32: "rune_ptr",
		33: "uint_ptr",
		34: "uint16_ptr",
		35: "uint32_ptr",
		36: "uint64_ptr",
		37: "uint8_ptr",
		38: "any_ptr",
	}
	Builtin_value = map[string]int32{
		"string":         0,
		"bool":           1,
		"byte":           2,
		"complex128":     3,
		"complex64":      4,
		"float32":        5,
		"float64":        6,
		"int":            7,
		"int16":          8,
		"int32":          9,
		"int64":          10,
		"int8":           11,
		"rune":           12,
		"uint":           13,
		"uint16":         14,
		"uint32":         15,
		"uint64":         16,
		"uint8":          17,
		"uintptr":        18,
		"any":            19,
		"string_ptr":     20,
		"bool_ptr":       21,
		"byte_ptr":       22,
		"complex128_ptr": 23,
		"complex64_ptr":  24,
		"float32_ptr":    25,
		"float64_ptr":    26,
		"int_ptr":        27,
		"int16_ptr":      28,
		"int32_ptr":      29,
		"int64_ptr":      30,
		"int8_ptr":       31,
		"rune_ptr":       32,
		"uint_ptr":       33,
		"uint16_ptr":     34,
		"uint32_ptr":     35,
		"uint64_ptr":     36,
		"uint8_ptr":      37,
		"any_ptr":        38,
	}
)

func (x Builtin) Enum() *Builtin {
	p := new(Builtin)
	*p = x
	return p
}

func (x Builtin) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Builtin) Descriptor() protoreflect.EnumDescriptor {
	return file_gotf_proto_enumTypes[0].Descriptor()
}

func (Builtin) Type() protoreflect.EnumType {
	return &file_gotf_proto_enumTypes[0]
}

func (x Builtin) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Builtin.Descriptor instead.
func (Builtin) EnumDescriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{0}
}

// AttrType to indicate terraform provider attribute types.
type AttrType int32

const (
	AttrType_bool_attr    AttrType = 0
	AttrType_int64_attr   AttrType = 1
	AttrType_float64_attr AttrType = 2
	AttrType_string_attr  AttrType = 3
)

// Enum value maps for AttrType.
var (
	AttrType_name = map[int32]string{
		0: "bool_attr",
		1: "int64_attr",
		2: "float64_attr",
		3: "string_attr",
	}
	AttrType_value = map[string]int32{
		"bool_attr":    0,
		"int64_attr":   1,
		"float64_attr": 2,
		"string_attr":  3,
	}
)

func (x AttrType) Enum() *AttrType {
	p := new(AttrType)
	*p = x
	return p
}

func (x AttrType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttrType) Descriptor() protoreflect.EnumDescriptor {
	return file_gotf_proto_enumTypes[1].Descriptor()
}

func (AttrType) Type() protoreflect.EnumType {
	return &file_gotf_proto_enumTypes[1]
}

func (x AttrType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttrType.Descriptor instead.
func (AttrType) EnumDescriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{1}
}

// Must is used to set terraform block attribute's required, optional or computed
// values
type MustBe int32

const (
	MustBe_Computed            MustBe = 0 // field will be computed by provider, user can't set it in terraform script (default).
	MustBe_Optional            MustBe = 1 // field is optional, user can set it in terraform script.
	MustBe_OptionalAndComputed MustBe = 2 // field is optional, but will be computed or overriden by provider.
	MustBe_Required            MustBe = 3 // field is required, user must set it in terraform script.
)

// Enum value maps for MustBe.
var (
	MustBe_name = map[int32]string{
		0: "Computed",
		1: "Optional",
		2: "OptionalAndComputed",
		3: "Required",
	}
	MustBe_value = map[string]int32{
		"Computed":            0,
		"Optional":            1,
		"OptionalAndComputed": 2,
		"Required":            3,
	}
)

func (x MustBe) Enum() *MustBe {
	p := new(MustBe)
	*p = x
	return p
}

func (x MustBe) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MustBe) Descriptor() protoreflect.EnumDescriptor {
	return file_gotf_proto_enumTypes[2].Descriptor()
}

func (MustBe) Type() protoreflect.EnumType {
	return &file_gotf_proto_enumTypes[2]
}

func (x MustBe) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MustBe.Descriptor instead.
func (MustBe) EnumDescriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{2}
}

// GoIdentity to indicate user defined go types such as structs, interfaces, etc.
// for terraform provider and block attribute type.
type GoIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the user defined go type.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// import_path (go mod name) of the user defined go type.
	// defaults to current proto files go_package name.
	ImportPath string `protobuf:"bytes,2,opt,name=import_path,json=importPath,proto3" json:"import_path,omitempty"`
	// if set to true, this type will be generated as pointer type.
	// *should not be set for interfaces.*
	Ptr bool `protobuf:"varint,3,opt,name=ptr,proto3" json:"ptr,omitempty"`
}

func (x *GoIdentity) Reset() {
	*x = GoIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gotf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoIdentity) ProtoMessage() {}

func (x *GoIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_gotf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoIdentity.ProtoReflect.Descriptor instead.
func (*GoIdentity) Descriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{0}
}

func (x *GoIdentity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoIdentity) GetImportPath() string {
	if x != nil {
		return x.ImportPath
	}
	return ""
}

func (x *GoIdentity) GetPtr() bool {
	if x != nil {
		return x.Ptr
	}
	return false
}

// Slice to indicate go slice ([]xyz) as terraform provider and block's attribute type.
type Slice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Slice_Builtin
	//	*Slice_Identity
	Type isSlice_Type `protobuf_oneof:"type"`
}

func (x *Slice) Reset() {
	*x = Slice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gotf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slice) ProtoMessage() {}

func (x *Slice) ProtoReflect() protoreflect.Message {
	mi := &file_gotf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slice.ProtoReflect.Descriptor instead.
func (*Slice) Descriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{1}
}

func (m *Slice) GetType() isSlice_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Slice) GetBuiltin() Builtin {
	if x, ok := x.GetType().(*Slice_Builtin); ok {
		return x.Builtin
	}
	return Builtin_string
}

func (x *Slice) GetIdentity() *GoIdentity {
	if x, ok := x.GetType().(*Slice_Identity); ok {
		return x.Identity
	}
	return nil
}

type isSlice_Type interface {
	isSlice_Type()
}

type Slice_Builtin struct {
	// builtin type's slice
	Builtin Builtin `protobuf:"varint,2,opt,name=builtin,proto3,enum=gotf.Builtin,oneof"`
}

type Slice_Identity struct {
	// identity of user defined go type's slice
	Identity *GoIdentity `protobuf:"bytes,3,opt,name=identity,proto3,oneof"`
}

func (*Slice_Builtin) isSlice_Type() {}

func (*Slice_Identity) isSlice_Type() {}

// Map to indicate go map (map[xyz]abc) as terraform provider and block's attribute type.
type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Key:
	//
	//	*Map_BuiltinKey
	//	*Map_IdentityKey
	Key isMap_Key `protobuf_oneof:"key"`
	// Types that are assignable to Value:
	//
	//	*Map_BuiltinValue
	//	*Map_IdentityValue
	Value isMap_Value `protobuf_oneof:"value"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gotf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_gotf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{2}
}

func (m *Map) GetKey() isMap_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (x *Map) GetBuiltinKey() Builtin {
	if x, ok := x.GetKey().(*Map_BuiltinKey); ok {
		return x.BuiltinKey
	}
	return Builtin_string
}

func (x *Map) GetIdentityKey() *GoIdentity {
	if x, ok := x.GetKey().(*Map_IdentityKey); ok {
		return x.IdentityKey
	}
	return nil
}

func (m *Map) GetValue() isMap_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Map) GetBuiltinValue() Builtin {
	if x, ok := x.GetValue().(*Map_BuiltinValue); ok {
		return x.BuiltinValue
	}
	return Builtin_string
}

func (x *Map) GetIdentityValue() *GoIdentity {
	if x, ok := x.GetValue().(*Map_IdentityValue); ok {
		return x.IdentityValue
	}
	return nil
}

type isMap_Key interface {
	isMap_Key()
}

type Map_BuiltinKey struct {
	// builtin type map key
	BuiltinKey Builtin `protobuf:"varint,1,opt,name=builtin_key,json=builtinKey,proto3,enum=gotf.Builtin,oneof"`
}

type Map_IdentityKey struct {
	// identity of user defined go type; map key
	IdentityKey *GoIdentity `protobuf:"bytes,2,opt,name=identity_key,json=identityKey,proto3,oneof"`
}

func (*Map_BuiltinKey) isMap_Key() {}

func (*Map_IdentityKey) isMap_Key() {}

type isMap_Value interface {
	isMap_Value()
}

type Map_BuiltinValue struct {
	// builtin type map value
	BuiltinValue Builtin `protobuf:"varint,3,opt,name=builtin_value,json=builtinValue,proto3,enum=gotf.Builtin,oneof"`
}

type Map_IdentityValue struct {
	// identity of user defined go type; map value
	IdentityValue *GoIdentity `protobuf:"bytes,4,opt,name=identity_value,json=identityValue,proto3,oneof"`
}

func (*Map_BuiltinValue) isMap_Value() {}

func (*Map_IdentityValue) isMap_Value() {}

// GoType to represent a field in golang struct. It can be grpc client (service)
// from this package or any other go type.
// In case the type of field is not defined in this package, it must be in as below:
//
//	<package>.<type>
//
// Examples:
//
//	fields = {"client": "XFromThisPackageServiceClient", "client2": "example.protobuf.xyz.SomeServiceClient"}
//	fields = {"dbClient": "github.com/org/repo/pkg.Client"}
type GoType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*GoType_Builtin
	//	*GoType_GoIdentity
	//	*GoType_Slice
	//	*GoType_Map
	Type isGoType_Type `protobuf_oneof:"type"`
}

func (x *GoType) Reset() {
	*x = GoType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gotf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoType) ProtoMessage() {}

func (x *GoType) ProtoReflect() protoreflect.Message {
	mi := &file_gotf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoType.ProtoReflect.Descriptor instead.
func (*GoType) Descriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{3}
}

func (m *GoType) GetType() isGoType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *GoType) GetBuiltin() Builtin {
	if x, ok := x.GetType().(*GoType_Builtin); ok {
		return x.Builtin
	}
	return Builtin_string
}

func (x *GoType) GetGoIdentity() *GoIdentity {
	if x, ok := x.GetType().(*GoType_GoIdentity); ok {
		return x.GoIdentity
	}
	return nil
}

func (x *GoType) GetSlice() *Slice {
	if x, ok := x.GetType().(*GoType_Slice); ok {
		return x.Slice
	}
	return nil
}

func (x *GoType) GetMap() *Map {
	if x, ok := x.GetType().(*GoType_Map); ok {
		return x.Map
	}
	return nil
}

type isGoType_Type interface {
	isGoType_Type()
}

type GoType_Builtin struct {
	Builtin Builtin `protobuf:"varint,1,opt,name=builtin,proto3,enum=gotf.Builtin,oneof"`
}

type GoType_GoIdentity struct {
	GoIdentity *GoIdentity `protobuf:"bytes,2,opt,name=go_identity,json=goIdentity,proto3,oneof"`
}

type GoType_Slice struct {
	Slice *Slice `protobuf:"bytes,3,opt,name=slice,proto3,oneof"`
}

type GoType_Map struct {
	Map *Map `protobuf:"bytes,4,opt,name=map,proto3,oneof"`
}

func (*GoType_Builtin) isGoType_Type() {}

func (*GoType_GoIdentity) isGoType_Type() {}

func (*GoType_Slice) isGoType_Type() {}

func (*GoType_Map) isGoType_Type() {}

// Block allows to generate terraform resource or datasource from proto message
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for terraform resource or datasource, defaults to message name.
	// defaults to snake_case of message name.
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// explicit_fields if set to `false` (default), all fields will be generated as
	// attributes in this terraform block.
	//
	// If set to `true`, only fields with `gotf.Attribute` will be generated
	// as an attributes in this terraform block.
	//
	// Check gotf.Attribute for default attribute properties.
	ExplicitFields bool `protobuf:"varint,2,opt,name=explicit_fields,json=explicitFields,proto3" json:"explicit_fields,omitempty"`
	// members to be set on go struct being generated for this terraform block.
	// These are helper fields for block such as grpc clients, rest clients, etc and not
	// terraform attributes of the block.
	//
	// Map's key is name of the field on struct. Should follow go struct field naming convention.
	Members     map[string]*GoType `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Description string             `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gotf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_gotf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{4}
}

func (x *Block) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Block) GetExplicitFields() bool {
	if x != nil {
		return x.ExplicitFields
	}
	return false
}

func (x *Block) GetMembers() map[string]*GoType {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Block) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Attribute to set kind properties of terraform attribute & schema for terraform block.
type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// skip this field from from this terraform block.
	Skip bool `protobuf:"varint,1,opt,name=skip,proto3" json:"skip,omitempty"`
	// attribute must_be computed, optional, required or optional and computed.
	MustBe MustBe `protobuf:"varint,2,opt,name=must_be,json=mustBe,proto3,enum=gotf.MustBe" json:"must_be,omitempty"`
	// name of terraform attribute, check [attribute-names] documentation for more details.
	// defaults to snake_case of message field name.
	//
	// [attribute-names]: https://developer.hashicorp.com/terraform/plugin/best-practices/naming#attribute-names
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// sensitive if set to true field will be marked as sensitive.
	Sensitive *bool `protobuf:"varint,4,opt,name=sensitive,proto3,oneof" json:"sensitive,omitempty"`
	// description is used to set terraform attribute's description. Defaults to
	// field comment.
	Description *string `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// md_description is used to set terraform attribute's markdown description of
	// field. Defaults to field comment.
	MdDescription *string `protobuf:"bytes,6,opt,name=md_description,json=mdDescription,proto3,oneof" json:"md_description,omitempty"`
	// deprecation is used to set terraform attribute's deprecation message.
	Deprecation *string `protobuf:"bytes,7,opt,name=deprecation,proto3,oneof" json:"deprecation,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gotf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_gotf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{5}
}

func (x *Attribute) GetSkip() bool {
	if x != nil {
		return x.Skip
	}
	return false
}

func (x *Attribute) GetMustBe() MustBe {
	if x != nil {
		return x.MustBe
	}
	return MustBe_Computed
}

func (x *Attribute) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Attribute) GetSensitive() bool {
	if x != nil && x.Sensitive != nil {
		return *x.Sensitive
	}
	return false
}

func (x *Attribute) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Attribute) GetMdDescription() string {
	if x != nil && x.MdDescription != nil {
		return *x.MdDescription
	}
	return ""
}

func (x *Attribute) GetDeprecation() string {
	if x != nil && x.Deprecation != nil {
		return *x.Deprecation
	}
	return ""
}

// Option to create provider for this package.
type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is used to set terraform provider type name, all resources and datasources
	// will be generated under this provider.
	//
	// Example:
	//
	//	name = "xyz";
	//
	// This will produce terraform blocks will be
	//
	//	resource "xyz_resource_name" { ... }
	//	data "xyz_datasource_name" { ... }
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// package where all generated proto messages are placed (by protoc-gen-go)
	//
	// This field is required.
	PbPackage string `protobuf:"bytes,3,opt,name=pb_package,json=pbPackage,proto3" json:"pb_package,omitempty"`
	// package where generated terraform go code should be placed
	//
	// If not set files will be placed in ./provider.
	ProviderPackage string `protobuf:"bytes,4,opt,name=provider_package,json=providerPackage,proto3" json:"provider_package,omitempty"`
	// module of this project, defined in go.mod. It is used in go import statements
	// to access protobuf messages used by the provider.
	//
	// Default value is taken from go_opt flag passed to protoc.
	//
	//	protoc --go_opt=module=...
	//
	// Required if provider package is different from any of the other proto files
	Module *string `protobuf:"bytes,5,opt,name=module,proto3,oneof" json:"module,omitempty"`
	// members to be set on go struct being generated for this terraform provider.
	// These are helper fields for provider such as grpc connection and not
	// terraform attributes of the provider.
	//
	// Map's key is name of the field on struct. Should follow go struct field naming convention.
	Members map[string]*GoType `protobuf:"bytes,6,rep,name=members,proto3" json:"members,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// description is used to set terraform provider's description.
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gotf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_gotf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_gotf_proto_rawDescGZIP(), []int{6}
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider) GetPbPackage() string {
	if x != nil {
		return x.PbPackage
	}
	return ""
}

func (x *Provider) GetProviderPackage() string {
	if x != nil {
		return x.ProviderPackage
	}
	return ""
}

func (x *Provider) GetModule() string {
	if x != nil && x.Module != nil {
		return *x.Module
	}
	return ""
}

func (x *Provider) GetMembers() map[string]*GoType {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Provider) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var file_gotf_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Provider)(nil),
		Field:         82848,
		Name:          "gotf.provider",
		Tag:           "bytes,82848,opt,name=provider",
		Filename:      "gotf.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Block)(nil),
		Field:         82849,
		Name:          "gotf.resource",
		Tag:           "bytes,82849,opt,name=resource",
		Filename:      "gotf.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*Block)(nil),
		Field:         82850,
		Name:          "gotf.datasource",
		Tag:           "bytes,82850,opt,name=datasource",
		Filename:      "gotf.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*Attribute)(nil),
		Field:         82851,
		Name:          "gotf.attribute",
		Tag:           "bytes,82851,opt,name=attribute",
		Filename:      "gotf.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// define provider for this package, should be set only once per package.
	//
	// optional gotf.Provider provider = 82848;
	E_Provider = &file_gotf_proto_extTypes[0]
	// define this message as a resource
	//
	// optional gotf.Block resource = 82849;
	E_Resource = &file_gotf_proto_extTypes[1]
	// define this message as a datasource
	//
	// optional gotf.Block datasource = 82850;
	E_Datasource = &file_gotf_proto_extTypes[2]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// define this field's terraform attribute on this resource and/ or datasource.
	//
	// optional gotf.Attribute attribute = 82851;
	E_Attribute = &file_gotf_proto_extTypes[3]
)

var File_gotf_proto protoreflect.FileDescriptor

var file_gotf_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x6f,
	0x74, 0x66, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x0a, 0x47, 0x6f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x70, 0x74, 0x72, 0x22, 0x6a, 0x0a, 0x05, 0x53, 0x6c, 0x69,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x12, 0x2e, 0x0a,
	0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x47, 0x6f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x06, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xef, 0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x35, 0x0a, 0x0c, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x47, 0x6f, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e,
	0x67, 0x6f, 0x74, 0x66, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x48, 0x01, 0x52, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x47, 0x6f, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x01, 0x52, 0x0d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x06, 0x47, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x12, 0x33, 0x0a,
	0x0b, 0x67, 0x6f, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x47, 0x6f, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x6f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x4d, 0x61, 0x70, 0x48,
	0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf2,
	0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x6c,
	0x69, 0x63, 0x69, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f,
	0x74, 0x66, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x48, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x47, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xc6, 0x02, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x74, 0x5f, 0x62, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x4d, 0x75,
	0x73, 0x74, 0x42, 0x65, 0x52, 0x06, 0x6d, 0x75, 0x73, 0x74, 0x42, 0x65, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0d, 0x6d, 0x64, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x64,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb3, 0x02, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x62, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x62, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x48, 0x0a,
	0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x67, 0x6f, 0x74, 0x66, 0x2e, 0x47, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2a, 0x94, 0x04, 0x0a, 0x07, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x12, 0x0a,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x79, 0x74, 0x65, 0x10, 0x02, 0x12, 0x0e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x31, 0x32, 0x38, 0x10, 0x03, 0x12, 0x0d,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x36, 0x34, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x36, 0x34, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x10, 0x07,
	0x12, 0x09, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x10,
	0x0a, 0x12, 0x08, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x38, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x72,
	0x75, 0x6e, 0x65, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x10, 0x0d, 0x12,
	0x0a, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x10, 0x0f, 0x12, 0x0a, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x10, 0x10, 0x12, 0x09, 0x0a, 0x05, 0x75, 0x69, 0x6e, 0x74, 0x38, 0x10, 0x11, 0x12, 0x0b,
	0x0a, 0x07, 0x75, 0x69, 0x6e, 0x74, 0x70, 0x74, 0x72, 0x10, 0x12, 0x12, 0x07, 0x0a, 0x03, 0x61,
	0x6e, 0x79, 0x10, 0x13, 0x12, 0x0e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x74, 0x72, 0x10, 0x14, 0x12, 0x0c, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x74, 0x72,
	0x10, 0x15, 0x12, 0x0c, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x16,
	0x12, 0x12, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x31, 0x32, 0x38, 0x5f, 0x70,
	0x74, 0x72, 0x10, 0x17, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x36,
	0x34, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x18, 0x12, 0x0f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74,
	0x33, 0x32, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x19, 0x12, 0x0f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x36, 0x34, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x1a, 0x12, 0x0b, 0x0a, 0x07, 0x69, 0x6e, 0x74,
	0x5f, 0x70, 0x74, 0x72, 0x10, 0x1b, 0x12, 0x0d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x5f,
	0x70, 0x74, 0x72, 0x10, 0x1c, 0x12, 0x0d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x70,
	0x74, 0x72, 0x10, 0x1d, 0x12, 0x0d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x70, 0x74,
	0x72, 0x10, 0x1e, 0x12, 0x0c, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x70, 0x74, 0x72, 0x10,
	0x1f, 0x12, 0x0c, 0x0a, 0x08, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x20, 0x12,
	0x0c, 0x0a, 0x08, 0x75, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x21, 0x12, 0x0e, 0x0a,
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x31, 0x36, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x22, 0x12, 0x0e, 0x0a,
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x23, 0x12, 0x0e, 0x0a,
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x24, 0x12, 0x0d, 0x0a,
	0x09, 0x75, 0x69, 0x6e, 0x74, 0x38, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x25, 0x12, 0x0b, 0x0a, 0x07,
	0x61, 0x6e, 0x79, 0x5f, 0x70, 0x74, 0x72, 0x10, 0x26, 0x2a, 0x4c, 0x0a, 0x08, 0x41, 0x74, 0x74,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x10, 0x03, 0x2a, 0x4b, 0x0a, 0x06, 0x4d, 0x75, 0x73, 0x74, 0x42,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x10, 0x03, 0x3a, 0x50, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xa0, 0x87, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x6f, 0x74, 0x66,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x3a, 0x4d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0xa1, 0x87, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67, 0x6f,
	0x74, 0x66, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x51, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa2, 0x87, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x67,
	0x6f, 0x74, 0x66, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x3a, 0x51, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xa3, 0x87, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x6f, 0x74, 0x66, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x18, 0x5a, 0x16, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x61, 0x76, 0x69, 0x78,
	0x2f, 0x67, 0x6f, 0x74, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gotf_proto_rawDescOnce sync.Once
	file_gotf_proto_rawDescData = file_gotf_proto_rawDesc
)

func file_gotf_proto_rawDescGZIP() []byte {
	file_gotf_proto_rawDescOnce.Do(func() {
		file_gotf_proto_rawDescData = protoimpl.X.CompressGZIP(file_gotf_proto_rawDescData)
	})
	return file_gotf_proto_rawDescData
}

var file_gotf_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_gotf_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_gotf_proto_goTypes = []interface{}{
	(Builtin)(0),                        // 0: gotf.Builtin
	(AttrType)(0),                       // 1: gotf.AttrType
	(MustBe)(0),                         // 2: gotf.MustBe
	(*GoIdentity)(nil),                  // 3: gotf.GoIdentity
	(*Slice)(nil),                       // 4: gotf.Slice
	(*Map)(nil),                         // 5: gotf.Map
	(*GoType)(nil),                      // 6: gotf.GoType
	(*Block)(nil),                       // 7: gotf.Block
	(*Attribute)(nil),                   // 8: gotf.Attribute
	(*Provider)(nil),                    // 9: gotf.Provider
	nil,                                 // 10: gotf.Block.MembersEntry
	nil,                                 // 11: gotf.Provider.MembersEntry
	(*descriptorpb.MessageOptions)(nil), // 12: google.protobuf.MessageOptions
	(*descriptorpb.FieldOptions)(nil),   // 13: google.protobuf.FieldOptions
}
var file_gotf_proto_depIdxs = []int32{
	0,  // 0: gotf.Slice.builtin:type_name -> gotf.Builtin
	3,  // 1: gotf.Slice.identity:type_name -> gotf.GoIdentity
	0,  // 2: gotf.Map.builtin_key:type_name -> gotf.Builtin
	3,  // 3: gotf.Map.identity_key:type_name -> gotf.GoIdentity
	0,  // 4: gotf.Map.builtin_value:type_name -> gotf.Builtin
	3,  // 5: gotf.Map.identity_value:type_name -> gotf.GoIdentity
	0,  // 6: gotf.GoType.builtin:type_name -> gotf.Builtin
	3,  // 7: gotf.GoType.go_identity:type_name -> gotf.GoIdentity
	4,  // 8: gotf.GoType.slice:type_name -> gotf.Slice
	5,  // 9: gotf.GoType.map:type_name -> gotf.Map
	10, // 10: gotf.Block.members:type_name -> gotf.Block.MembersEntry
	2,  // 11: gotf.Attribute.must_be:type_name -> gotf.MustBe
	11, // 12: gotf.Provider.members:type_name -> gotf.Provider.MembersEntry
	6,  // 13: gotf.Block.MembersEntry.value:type_name -> gotf.GoType
	6,  // 14: gotf.Provider.MembersEntry.value:type_name -> gotf.GoType
	12, // 15: gotf.provider:extendee -> google.protobuf.MessageOptions
	12, // 16: gotf.resource:extendee -> google.protobuf.MessageOptions
	12, // 17: gotf.datasource:extendee -> google.protobuf.MessageOptions
	13, // 18: gotf.attribute:extendee -> google.protobuf.FieldOptions
	9,  // 19: gotf.provider:type_name -> gotf.Provider
	7,  // 20: gotf.resource:type_name -> gotf.Block
	7,  // 21: gotf.datasource:type_name -> gotf.Block
	8,  // 22: gotf.attribute:type_name -> gotf.Attribute
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	19, // [19:23] is the sub-list for extension type_name
	15, // [15:19] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_gotf_proto_init() }
func file_gotf_proto_init() {
	if File_gotf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gotf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gotf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gotf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gotf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gotf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gotf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gotf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gotf_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Slice_Builtin)(nil),
		(*Slice_Identity)(nil),
	}
	file_gotf_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Map_BuiltinKey)(nil),
		(*Map_IdentityKey)(nil),
		(*Map_BuiltinValue)(nil),
		(*Map_IdentityValue)(nil),
	}
	file_gotf_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GoType_Builtin)(nil),
		(*GoType_GoIdentity)(nil),
		(*GoType_Slice)(nil),
		(*GoType_Map)(nil),
	}
	file_gotf_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_gotf_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_gotf_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gotf_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 4,
			NumServices:   0,
		},
		GoTypes:           file_gotf_proto_goTypes,
		DependencyIndexes: file_gotf_proto_depIdxs,
		EnumInfos:         file_gotf_proto_enumTypes,
		MessageInfos:      file_gotf_proto_msgTypes,
		ExtensionInfos:    file_gotf_proto_extTypes,
	}.Build()
	File_gotf_proto = out.File
	file_gotf_proto_rawDesc = nil
	file_gotf_proto_goTypes = nil
	file_gotf_proto_depIdxs = nil
}
